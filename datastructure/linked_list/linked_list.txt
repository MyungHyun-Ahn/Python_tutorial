링크드 리스트 (Linked List)
- 데이터를 순서대로 저장해준다.
- 요소를 계속 추가할 수 있다.

연결 리스트
| 데이터 | -> | 데이터 | -> | 데이터 |

노드 (Node)
노드는 하나의 객체로 표현 가능

 head 노드                                  tail 노드
    n1              n2           ...           nn
----------      ----------                 ----------        
|  data  |      |  data  |                 |  data  |
----------  ->  ----------             ->  ----------
|  next  |      |  next  |                 |  next  | 
----------      ----------                 ----------

맨 앞 노드 = head Node
맨 마지막 노드 = tail Node


링크드 리스트 접근 연산
- 특정 위치에 있는 노드를 리턴하는 연산!

링크드 리스트는 레퍼런스를 통해 순서를 저장하기 때문에 한번에 원하는 위치의 데이터에 접근하지 못함!
한칸씩 뒤로 이동하며 접근

시간 복잡도 : 인덱스 x에 있는 노드에 접근하려면 head에서 다음 노드로 x 번 가면 됨!
             마지막 노드에 접근하려면 head에서 다음 노드로 n-1번 가야 됨
             즉, O(n)


링크드 리스트 삽입 연산
가장 마지막 순서에 삽입할 때
if previous_node is self.tail:
    self.tail.next = new_node
    self.tail = new_node

두 노드 사이에 삽입할 때
else:
    new_node.next = previous_node.next
    previous_node.next = new_node